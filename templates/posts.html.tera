{% macro draw_embed(title="", description="", image="", author) %}
<title>{{ title }} - {{ game_name }} Mod Archive</title>
<meta property="og:title" content="{{ title }} - {{ author }}">
{% if description != "" %}
<meta name="description" content="{{ description }}">
<meta property="og:description" content="{{ description }}">
{% endif %}
{% if image != "" %}
<meta property="og:image" content="{{ image }}">
<meta name="twitter:card" content="summary_large_image">
{% endif %}
<meta property="og:site_name" content="{{ game_name }} Mod Archive">

<style>
	@media (min-width: 768px) {
		.text-align-right-md {
			text-align: right;
		}
	}

	.text-align-right {
		text-align: right;
	}
</style>
{% endmacro draw_embed %}

{% macro draw_post_short(id, name, text_short, image, likes=-1, dislikes=-1, downloads=-1, draw_remove=false,
game_tag="MM+", type_tag="Other") %}
<div class="col">
	<div class="card shadow-sm">
		<a title="{{ text_short }}" style="text-decoration: none;" href="/posts/{{ id }}">
			<div class="card-img-top ratio ratio-16x9 bg-clear" loading="lazy">
				<img src="{{ image }}" class="rounded-image" width="100%" alt="{{ text_short }}" loading="lazy" data-cold="">
			</div>
			<div class="card-body">
				<h5 class="text">{{ name | truncate(length=20) }}</h5>
				<div class="row">
					{% if likes != -1 %}
					<div class="col-md-6 text">{{ likes }}üëç{{ dislikes }}üëé<br>DLs: {{ downloads }}</div>
					{% elif downloads != -1 %}
					<div class="col-md-6 text">DLs: {{ downloads }}</div>
					{% endif %}
					<div class="col-md-6 text text-align-right-md">
						{{ type_tag }}
					</div>
				</div>
			</div>
		</a>
		{% if draw_remove != false %}
		<a href="{{ draw_remove }}" class="{{ self::btn_danger_outer() }}" data-cold="">
			<button type="button" class="{{ self::btn_inner() }}">Remove</button>
		</a>
		{% endif %}
	</div>
</div>
{% endmacro draw_post_short %}

{% macro draw_buttons(current_offset, draw_forward, order="latest", game_tag=0, name="") %}
<br>
<div class="d-flex justify-content-evenly">
	{% if current_offset != 0 %}
	<a class="nav-link" href="?offset={{ current_offset - 20 }}&order={{ order }}&game_tag={{ game_tag }}&name={{ name }}">
		<button class="btn btn-lg btn-secondary" type="button">Previous</button>
	</a>
	{% endif %}
	{% if draw_forward %}
	<a class="nav-link" href="?offset={{ current_offset + 20 }}&order={{ order }}&game_tag={{ game_tag }}&name={{ name }}">
		<button class="btn btn-lg btn-secondary" type="button">Next</button>
	</a>
	{% endif %}
</div>
{% endmacro draw_buttons %}

{% macro draw_search_box(previous_title=false, previous_sort="latest", previous_game_tag=0) %}
<br>
<div style="display: flex; justify-content: center;">
	<form class="nav">
		<div class="row row-cols-2 row-cols-md-4">
			{% if previous_title != false %}
			<div class="col flex-md-grow-1">
				<input class="form-control list-text" type="text" placeholder="Search" name="name" autocomplete="off"
					value="{{ previous_title }}">
			</div>
			{% endif %}
			<div class="col flex-md-grow-1">
				<select name="order" class="form-control list-text" selected="{{ previous_sort }}">
					<option value="latest">Latest</option>
					{% if previous_sort == "popular" %}
					<option value="popular" selected>Popular</option>
					{% else %}
					<option value="popular">Popular</option>
					{% endif %}
				</select>
			</div>
			{% if previous_game_tag != -1 %}
			<div class="col flex-md-grow-1">
				<select class="form-control list-text" id="game_tag" name="game_tag">
					{% for game_tag in game_tags %}
					<option value="{{ game_tag.id }}" {% if game_tag.id==previous_game_tag %}selected{% endif %}>
						{{ game_tag.name }}</option>
					{% endfor %}
				</select>
			</div>
			{% endif %}
			<div class="col-1">
				<button class="btn btn-secondary" type="submit">Search</button>
			</div>
		</div>
	</form>
</div>
<br>
{% endmacro draw_search_box %}

{% macro btn_success_outer() %}
btn btn-sm btn-outline-success btn-success
{% endmacro %}

{% macro btn_info_outer() %}
btn btn-sm btn-outline-info btn-info
{% endmacro %}

{% macro btn_danger_outer() %}
btn btn-sm btn-outline-danger btn-danger
{% endmacro %}

{% macro btn_warning_outer() %}
btn btn-sm btn-outline-warning btn-warning
{% endmacro %}

{% macro btn_inner() %}
btn text-light
{% endmacro %}

{% macro draw_post_full(id, name, text, image, link, last_updated, uploader_id, uploader_name, likes, dislikes,
downloads, dependencies, changelogs, is_logged_in=false, has_liked=false, has_disliked=false, jwt="", who_is_logged_in=0,
extra_images, comments) %}
<script>
	var had_disliked = {{ has_disliked }};
	var had_liked = {{ has_liked }};

	function onLike() {
		options = {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'Authorization': 'Bearer {{ jwt }}'
			}
		}
		fetch('/api/v1/posts/{{ id }}/like/', options)
			.then(response => response.json())
			.then(data => {
				if (had_liked) {
					document.getElementById('likes').innerHTML = Number(document.getElementById('likes').innerHTML.slice(0, -2)) - 1 + "üëç"
					document.getElementById('likedradiobtn').checked = false
					had_liked = false
				} else {
					document.getElementById('likes').innerHTML = Number(document.getElementById('likes').innerHTML.slice(0, -2)) + 1 + "üëç"
					document.getElementById('likedradiobtn').checked = true
					had_liked = true
					if (had_disliked) {
						document.getElementById('dislikes').innerHTML = Number(document.getElementById('dislikes').innerHTML.slice(0, -2)) - 1 + "üëé"
						had_disliked = false
						document.getElementById('dislikedradiobtn').checked = false
					}
				}
			})
			.catch(error => console.error(error))
	}

	function onDislike() {
		const options = {
			method: 'POST',
			headers: {
				'Content-Type': 'application/json',
				'Authorization': 'Bearer {{ jwt }}'
			}
		}
		fetch('/api/v1/posts/{{ id }}/dislike/', options)
			.then(response => response.json())
			.then(data => {
				if (had_disliked) {
					document.getElementById('dislikes').innerHTML = Number(document.getElementById('dislikes').innerHTML.slice(0, -2)) - 1 + "üëé"
					document.getElementById('dislikedradiobtn').checked = false
					had_disliked = false
				} else {
					document.getElementById('dislikes').innerHTML = Number(document.getElementById('dislikes').innerHTML.slice(0, -2)) + 1 + "üëé"
					document.getElementById('dislikedradiobtn').checked = true
					had_disliked = true
					if (had_liked) {
						document.getElementById('likes').innerHTML = Number(document.getElementById('likes').innerHTML.slice(0, -2)) - 1 + "üëç"
						document.getElementById('likedradiobtn').checked = false
						had_liked = false
					}
				}
			})
			.catch(error => console.error(error))
	}

	function deletePost() {
		const options = {
			method: 'DELETE',
			headers: {
				'Content-Type': 'application/json',
				'Authorization': 'Bearer {{ jwt }}'
			}
		}
		fetch("/api/v1/posts/{{ id }}/delete/", options)
			.then(response => {
				window.location.href = "/"
			})
			.catch(error => console.error(error))
	}

	function createCommentReply(postId, commentId) {
		let comment = document.getElementById(commentId);
		let newReply = `<div class="row g-1 m-0">
			<div class="col-small">
					<div class="line"></div>
			</div>
			<div class="col row g-1">
				<div class="row-cols-1 card p-0" id="newReply">
					<div class="card-body card-text text p-2">
						<textarea class="form-control" id="reply_text" rows="3"></textarea>
					</div>
					<div class="card-footer text-muted p-2">
						<a class="text-muted" onclick="replyToComment(${postId}, ${commentId})" data-cold="">Reply</a>
					</div>
				</div>
			</div>
		</div>`;
		comment.insertAdjacentHTML('afterend', newReply);
	}

	function replyToComment(postId, commentId) {
		let replyText = document.getElementById('reply_text').value;
		if (replyText == "") {
			alert("Please enter a reply");
			return;
		}
		window.location = `/posts/${postId}/comments/${commentId}/reply?text=${replyText}`;
	}

	function commentOnPost(postId) {
		let commentText = document.getElementById('comment_text').value;
		if (commentText == "") {
			alert("Please enter a comment");
			return;
		}
		window.location = `/posts/${postId}/comments/new?text=${commentText}`;
	}
</script>
<div class="row align-items-md-stretch gap-3">
	<div class="col-md-7 card card-body">
		<h2 class="text card-title" style="text-align: center">{{ name }} </h2>
		<div class="row d-flex align-items-center">
			<div class="col-md">
				<h5>
					<a href=" /user/{{ uploader_id }}" class="card-subtitle text">{{ uploader_name }}</a>
				</h5>
			</div>
			<div class="col-md">
				<h5 class="card-subtitle text-align-right-md text">Downloads: {{ downloads }}</h5>
			</div>
			<h5 class="card-subtitle text">Last updated: {{ last_updated | date }}</h5>
		</div>
		<a href="{{ image }}" target="_blank" class="ratio ratio-16x9 bg-clear" data-cold="">
			<img src="{{ image }}" class="card-img-top flat-image" loading="lazy" alt="Preview of {{ name }}">
		</a>
	</div>
	<div class="col-md-3 card card-body gap-3">
		<div class="btn-group">
			{% if is_logged_in %}
				<input type="radio" class="btn-check" name="btnradio" id="likedradiobtn" autocomplete="off"
				{% if has_liked %}
				checked="true"
				{% endif %}
					onclick="onLike()">
				<label class="btn btn-outline-primary" for="likedradiobtn" id="likes">{{ likes }}üëç</label>
				<input type="radio" class="btn-check" name="btnradio" id="dislikedradiobtn" autocomplete="off" 
				{% if has_disliked %}
				checked="true"
				{% endif %}
					onclick="onDislike()">
				<label class="btn btn-outline-primary" for="dislikedradiobtn" id="dislikes">{{ dislikes }}üëé</label>
			{% else %}
				<input type="radio" class="btn-check" name="btnradio" id="likedradiobtn" autocomplete="off">
				<label class="btn btn-outline-primary disabled" for="likedradiobtn" id="likes">{{ likes }}üëç</label>
				<input type="radio" class="btn-check" name="btnradio" id="dislikedradiobtn" autocomplete="off">
				<label class="btn btn-outline-primary disabled" for="dislikedradiobtn" id="dislikes">{{ dislikes }}üëé</label>
			{% endif %}
		</div>
		<a href="{{ link }}" class="{{ self::btn_success_outer() }}" download data-cold="">
			<button type="button" class="{{ self::btn_inner() }}">Download</button>
		</a>
		<a href="divamodmanager:dma/{{ id }}" class="{{ self::btn_info_outer() }}" download data-cold="">
			<button type="button" class="{{ self::btn_inner() }}">DMM One Click Install</button>
		</a>
		{% if who_is_logged_in == uploader_id %}
		<a href="/posts/{{ id }}/edit" class="{{ self::btn_warning_outer() }}" data-cold="">
			<button type="button" class="{{ self::btn_inner() }}">Edit</button>
		</a>
		<a href="/posts/{{ id }}/dependency" class="{{ self::btn_warning_outer() }}" data-cold="">
			<button type="button" class="{{ self::btn_inner() }}">Add dependency</button>
		</a>
		<div class="{{ self::btn_danger_outer() }}" onclick="deletePost()" data-cold="">
			<button type="button" class="{{ self::btn_inner() }}">Delete</button>
		</div>
		{% endif %}
		{% if is_logged_in == true and who_is_logged_in != uploader_id %}
		<a href="/posts/{{ id }}/report" class="{{ self::btn_danger_outer() }}" data-cold="">
			<button type="button" class="{{ self::btn_inner() }}">Report</button>
		</a>
		{% endif %}
	</div>
	<div class="card card-body text">
		{{ text | striptags | linebreaksbr | safe }}
	</div>
	{% if changelogs | length > 0 %}
		{% for changelog in changelogs %}
			<div class="card card-body text">
				<h5 class="text">{{ changelog.time | date }}</h5>
				{{ changelog.description }}
				{% if changelog.download %}
				<a href="{{ changelog.download }}" class="{{ self::btn_success_outer() }}" download data-cold="">
					<button type="button" class="{{ self::btn_inner() }}">Download</button>
				</a>
				{% endif %}
			</div>
		{% endfor %}
	{% endif %}
	{% if dependencies | length > 0 %}
	<div class="card card-body">
		<h4>This mod requires: </h4>
		<div class="row row-cols-2 row-cols-lg-4 gy-3">
			{% for post in dependencies %}
			{% if who_is_logged_in == uploader_id %}
			{% set draw_remove = "/posts/" ~ id ~ "/dependency/" ~ post.id ~ "/remove" %}
			{% else %}
			{% set draw_remove = false %}
			{% endif %}
			{% set game_tag = game_tags | filter(attribute="id", value=post.game_tag) | first %}
			{% set type_tag = type_tags | filter(attribute="id", value=post.type_tag) | first %}
			{{ posts::draw_post_short(id=post.id, name=post.name, text_short=post.text_short, image=post.image,
			likes=post.likes, dislikes=post.dislikes, downloads=post.downloads, draw_remove=draw_remove,
			game_tag=game_tag.name, type_tag=type_tag.name) }}
			{% endfor %}
		</div>
	</div>
	{% endif %}
	{% if extra_images | length > 0 %}
	<div class="card card-body">
		<h4>Additional screenshots:</h4>
		<div class="row row-cols-2 row-cols-lg-4 gy-3">
			{% for image in extra_images %}
			<div class="col">
				<div class="card shadow-sm">
					<a href="{{ image }}" target="_blank" class="card-img-top ratio ratio-16x9 bg-clear" data-cold="">
						<img src="{{ image }}" class="flat-image" width="100%" loading="lazy" alt="Preview of {{ name }}">
					</a>
				</div>
			</div>
			{% endfor %}
		</div>
	</div>
	{% endif %}
</div><br>
{% if is_logged_in %}
<div class="row g-1 m-0">
	<div class="col-small me-1">
			<div class="card line"></div>
	</div>
	<div class="col row g-1">
		<div class="row-cols-1 card p-0" id="newComment">
			<div class="card-body card-text text p-2">
				<textarea class="form-control" id="comment_text" rows="3"></textarea>
			</div>
			<div class="card-footer text-muted p-2">
				<a class="text-muted" onclick="commentOnPost({{ id }})" data-cold="">Comment</a>
			</div>
		</div>
	</div>
</div>
{% endif %}
{{ posts::draw_post_comments(id=id, comments=comments) }}
{% endmacro draw_post_full %}

{% macro draw_post_comments(id, comments, parent=0) %}
{% for comment in comments %}
	{% if comment.parent == parent or parent == 0 and not comment.parent %}
		<div class="row g-1 m-0">
			<div class="col-small me-1">
				<div class="card line"></div>
			</div>
			<div class="col row g-1">
				{{ posts::draw_post_comment(id=id, comment=comment) }}
				{{ posts::draw_post_comments(id=id,comments=comments, parent=comment.id) }}
			</div>
		</div>
	{% endif %}
{% endfor %}
{% endmacro draw_post_comments %}

{% macro draw_post_comment(id, comment) %}
<div class="row-cols-1 card p-0 fit" id="{{ comment.id }}">
	<div class="card-body card-text text p-2">
		{{ comment.text }}
	</div>
	<div class="card-footer text-muted p-2">
		<a href="/user/{{ comment.user.id }}" class="card-subtitle text-muted" data-cold="">{{comment.user.name }}</a>
		{{ comment.date | date }}
		{% if who_is_logged_in == comment.user.id %}
			<a href="/posts/{{ id }}/comments/{{ comment.id }}/remove" class="text-muted" data-cold="">Delete</a>
		{% endif %}
		{% if is_logged_in == true and who_is_logged_in != comment.user.id %}
			<a onclick="createCommentReply({{ id }}, {{ comment.id }})" class="text-muted" data-cold="">Reply</a>
		{% endif %}
	</div>
</div>
{% endmacro draw_post_comment %}