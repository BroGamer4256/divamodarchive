{% extends "base" %}
{% import "posts" as posts %}

{% block head %}
{{ posts::draw_embed(title="Upload", description="Upload your mod to DIVA Mod Archive") }}
{% endblock head %}

{% block content %}
<script>
	function upload() {
		var form = document.getElementById("form")

		var image = form['imagePicker']
		var archive = form['filePicker']
		if (image.files.length != 1 || archive.files.length != 1) {
			alert("Upload failed\nMissing image/archive");
			return
		}

		var name = form['title'].value
		var text = form['text'].value
		var text_short = form['text_short'].value
		if (title == "" || text == "" || text_short == "") {
			alert("Upload failed\nMissing text fields");
			return
		}

		options = {
			method: 'POST',
			headers: {
				'Content-Type': 'text/plain',
				'Authorization': 'Bearer {{ jwt }}'
			},
			body: image.files[0]
		}
		fetch('/api/v1/posts/upload_image?name=' + image.files[0].name, options)
			.then(response => response.json())
			.then(image_url => {
				if (image_url == null) {
					alert("Image upload failed\nOnly png files are supported at this time\nMaximum size for images is 8MiB");
					return
				}
				alert("Your mod is being uploaded, please wait as this can take a large amount of time");
				var file = archive.files[0];
				var chunkSize = 1024 * 1024 * 8;
				var chunkCount = Math.ceil(file.size / chunkSize);
				var chunkStart = 0;
				var chunksCompleted = 0;
				for (var i = 0; i < chunkCount; i++) {
					var chunkEnd = chunkStart + chunkSize;
					var chunk = file.slice(chunkStart, chunkEnd);
					chunkStart = chunkEnd;
					options = {
						method: 'POST',
						headers: {
							'Content-Type': 'text/plain',
							'Authorization': 'Bearer {{ jwt }}'
						},
						body: chunk
					}
					fetch("/api/v1/posts/upload_archive_chunk?name=" + file.name + "&chunk=" + i, options)
						.then(response => {
							if (response.status != 200) {
								alert("Archive chunk upload failed");
								return
							}
							chunksCompleted++;
							document.getElementById("progress").style.width = chunksCompleted / chunkCount * 100 + "%";
							if (chunksCompleted == chunkCount) {
								options = {
									method: 'POST',
									headers: {
										'Content-Type': 'text/plain',
										'Authorization': 'Bearer {{ jwt }}'
									},
								},
									fetch("/api/v1/posts/finish_upload_archive_chunk?name=" + file.name, options)
										.then(response => response.json())
										.then(archive_url => {
											let post_data = {
												'name': name,
												'text': text,
												'text_short': text_short,
												'image': image_url,
												'link': archive_url
											}

											options = {
												method: 'POST',
												headers: {
													'Content-Type': 'text/plain',
													'Authorization': 'Bearer {{ jwt }}'
												},
												body: JSON.stringify(post_data)
											}

											{% if update_id %}
											fetch('/api/v1/posts/upload?update_id={{update_id}}', options)
											{% else %}
											fetch('/api/v1/posts/upload', options)
											{% endif %}
												.then(response => response.json())
												.then(data => {
													window.location.href = "/posts/" + data['id']
												})
												.catch(error => alert("Unknown error when uploading"))
										})
										.catch(error => alert("Unknown error when uploading"))
							}
						})
				}
			})
	}
</script>
<form id="form" class="row align-items-md-stretch container gap-3" enctype="application/x-www-form-urlencoded">
	<div class="col-md-7 card card-body">
		{% if previous_title %}
		<h2 class="card-text text"><label for="title">Title: </label><input type="text" id="title" name="title"
				autocomplete="off" value="{{ previous_title }}"></h2>
		{% else %}
		<h2 class="card-text text"><label for="title">Title: </label><input type="text" id="title" name="title"
				autocomplete="off"></h2>
		{% endif %}
		<h5>
			<a href="/user/{{ user.id }}" class="card-subtitle text">{{ user.name | striptags }}</a>
		</h5>

		<label for="imagePicker" class="form-label mt-4">Image</label>
		<input class="form-control" accept="image/png" type="file" id="imagePicker">
	</div>
	<div class="col-md-3 card card-body gap-3">
		<div class="btn-group">
			<input type="radio" class="btn-check" name="btnradio" id="likedradiobtn" autocomplete="off">
			{% if likes %}
			<label class="btn btn-outline-primary disabled" for="likedradiobtn" id="likes">{{ likes }}👍</label>
			{% else %}
			<label class="btn btn-outline-primary disabled" for="likedradiobtn" id="likes">0👍</label>
			{% endif %}
			<input type="radio" class="btn-check" name="btnradio" id="dislikedradiobtn" autocomplete="off">
			{% if dislikes %}
			<label class="btn btn-outline-primary disabled" for="dislikedradiobtn" id="dislikes">{{ dislikes
				}}👎</label>
			{% else %}
			<label class="btn btn-outline-primary disabled" for="dislikedradiobtn" id="dislikes">0👎</label>
			{% endif %}
		</div>
		<div class="{{ posts::btn_success_outer() }}" onclick="upload()">
			<button type="button" style="box-shadow: none" class="{{ posts::btn_success_inner() }}">Upload</button>
		</div>
		<div class="progress">
			<div class="progress-bar bg-success" role="progressbar" style="width: 0;" aria-valuenow="25"
				aria-valuemin="0" aria-valuemax="100" id="progress"></div>
		</div>
		<label for="filePicker" class="form-label mt-4">Archive File</label>
		<input class="form-control" accept=".7z,.zip,.rar" type="file" id="filePicker">
	</div>
	<div class="card card-body">
		<h5 class="card-text">
			<label for="text">Long Description</label>
			{% if previous_description %}
			<textarea class="form-control" id="text" rows="5">{{ previous_description }}</textarea>
			{% else %}
			<textarea class="form-control" id="text" rows="5"></textarea>
			{% endif %}
			<label for="text_short">Short Description</label>
			{% if previous_description_short %}
			<input class="form-control" type="text" id="text_short" name="text_short" autocomplete="off"
				value="{{ previous_description_short }}">
			{% else %}
			<input class="form-control" type="text" id="text_short" name="text_short" autocomplete="off">
			{% endif %}
		</h5>
	</div>
</form>
{% endblock content %}